<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.vaadin</groupId>
        <artifactId>flow-servlet-containers-test</artifactId>
        <version>3.0-SNAPSHOT</version>
    </parent>

    <artifactId>flow-test-felix-jetty-server</artifactId>
    <name>Flow Felix with Jetty Test</name>
    <packaging>jar</packaging>

    <properties>
        <felix.version>6.0.0</felix.version>
        <felix.distribution>https://repo1.maven.org/maven2/org/apache/felix/org.apache.felix.main.distribution/${felix.version}/org.apache.felix.main.distribution-${felix.version}.zip</felix.distribution>
        <felix.home>felix-framework-${felix.version}</felix.home>
        <jetty.version>9.4.11.v20180605</jetty.version>
        <test.excludegroup>com.vaadin.flow.testcategory.IgnoreOSGi</test.excludegroup>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-test-root-context</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
            <classifier>ui</classifier>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-osgi</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-test-root-context</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.core.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr</artifactId>
            <version>2.1.10</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr.annotations</artifactId>
            <version>1.12.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr.compat</artifactId>
            <version>1.0.4</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr.ds-annotations</artifactId>
            <version>1.2.10</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.http.servlet-api</artifactId>
            <version>1.1.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.http.jetty</artifactId>
            <version>4.0.6</version>
            <scope>provided</scope>
        </dependency>

        <!-- Those dependencies are need for OSGi container where this bundle
            will be deployed. They will be copied into the bundle folder of OSGi container
            and automatically installed form there. -->

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.service.serviceloader</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.aries.spifly</groupId>
            <artifactId>org.apache.aries.spifly.static.bundle</artifactId>
            <version>1.0.12</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.aries.spifly</groupId>
            <artifactId>org.apache.aries.spifly.static.tool</artifactId>
            <version>1.0.12</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.aries.spifly</groupId>
            <artifactId>org.apache.aries.spifly.core-internal</artifactId>
            <version>1.0.12</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.aries.spifly</groupId>
            <artifactId>org.apache.aries.spifly.weaver-internal</artifactId>
            <version>1.0.12</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.aries</groupId>
            <artifactId>org.apache.aries.util</artifactId>
            <version>1.1.3</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.aries.spifly</groupId>
            <artifactId>org.apache.aries.spifly.dynamic.bundle</artifactId>
            <version>1.0.12</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>biz.aQute.bnd</groupId>
                <artifactId>bnd-maven-plugin</artifactId>
                <version>${bnd.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-files</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <get src="${felix.distribution}"
                                    dest="${project.build.directory}/felix.zip"
                                    verbose="false" usetimestamp="true" />
                                <unzip
                                    src="${project.build.directory}/felix.zip"
                                    dest="${project.build.directory}"></unzip>
                                <copy file="${basedir}/config.properties"
                                    todir="${project.build.directory}/${felix.home}/conf"></copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>compile</includeScope>
                            <outputDirectory>${project.build.directory}/${felix.home}/bundle</outputDirectory>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeGroupIds>com.google.code.findbugs,
                                org.seleniumhq.selenium, javax.servlet</excludeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <async>true</async>
                            <asyncDestroyOnShutdown>true</asyncDestroyOnShutdown>
                            <workingDirectory>${project.build.directory}/${felix.home}</workingDirectory>
                            <commandlineArgs>-Dgosh.args="--nointeractive
                                -s"
                                -jar
                                bin/felix.jar</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-wait-http</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <test>WaitHttpIT</test>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/WaitHttpIT.java</exclude>
                    </excludes>
                    <dependenciesToScan>
                        <dependency>${project.groupId}:flow-test-root-context</dependency>
                    </dependenciesToScan>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
