/*
 * Copyright 2000-2023 Vaadin Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.vaadin.flow.webcomponent;

import org.junit.Assert;
import org.junit.Test;

import com.vaadin.flow.testutil.ChromeBrowserTest;
import com.vaadin.testbench.TestBenchElement;

public class StreamResourceIT extends ChromeBrowserTest {

    @Override
    protected String getTestPath() {
        return Constants.PAGE_CONTEXT + "/streamResource.html";
    }

    @Test
    public void absoluteUrlsAreNotModified() {
        open();

        TestBenchElement downloadLink = $("vaadin-stream-resource").first()
                .$("a").id("absoluteLink");

        String url = downloadLink.getAttribute("href");
        Assert.assertTrue(
                "Url is not generated by custom StreamResourceRegistry",
                url.contains("/vaadin-stream-resources-absolute/"));
        Assert.assertEquals(
                "Absolute url has been prefixed with other content: " + url, 0,
                url.lastIndexOf("http://"));
    }

    @Test
    public void schemaLessUrlsAreNotModified() {
        open();

        TestBenchElement downloadLink = $("vaadin-stream-resource").first()
                .$("a").id("schemalessLink");

        String url = downloadLink.getAttribute("href");
        Assert.assertTrue(
                "Url is not generated by custom StreamResourceRegistry",
                url.contains("/vaadin-stream-resources-absolute/"));
        Assert.assertEquals(
                "Absolute url has been prefixed with other content: " + url, 0,
                url.lastIndexOf("http://"));
    }

    @Test
    public void relativeUrlsArePrefixedWithServiceUrl() {
        open();

        TestBenchElement downloadLink = $("vaadin-stream-resource").first()
                .$("a").id("relativeLink");

        String url = downloadLink.getAttribute("href");
        Assert.assertTrue(
                "Url is not generated by custom StreamResourceRegistry",
                url.contains("/vaadin-stream-resources/"));
        Assert.assertEquals(
                "Absolute url has been prefixed with other content: " + url, 0,
                url.lastIndexOf("http://"));
    }

}
