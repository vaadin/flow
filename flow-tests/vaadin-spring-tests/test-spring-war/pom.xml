<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.vaadin</groupId>
    <artifactId>vaadin-spring-tests</artifactId>
    <version>25.0-SNAPSHOT</version>
  </parent>
  <artifactId>vaadin-test-spring-war</artifactId>
  <packaging>war</packaging>
  <name>Vaadin Spring Boot deployable integration tests</name>
  <properties>
    <maven.deploy.skip>true</maven.deploy.skip>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Jetty Websocket client side dependencies  -->
      <dependency>
        <groupId>org.eclipse.jetty.ee10.websocket</groupId>
        <artifactId>jetty-ee10-websocket-jakarta-client</artifactId>
        <version>${jetty.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-dev-server</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-test-spring-common</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-test-spring-common</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>flow-server-production-mode</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Spring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- End Spring -->

    <!-- Jetty Websocket client side dependencies  -->
    <dependency>
      <groupId>org.eclipse.jetty.ee10.websocket</groupId>
      <artifactId>jetty-ee10-websocket-jakarta-client</artifactId>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse
                    m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- unpack common tests to run it in the project -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>process-test-classes</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-test-spring-helpers</artifactId>
                  <version>${project.version}</version>
                  <type>test-jar</type>
                  <classifier>tests</classifier>
                  <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-test-spring-common</artifactId>
                  <version>${project.version}</version>
                  <type>test-jar</type>
                  <classifier>tests</classifier>
                  <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty.ee10</groupId>
        <artifactId>jetty-ee10-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <executions>
          <!-- start and stop jetty (running our app) when running
                        integration tests -->
          <execution>
            <id>start-jetty</id>
            <goals>
              <goal>start</goal>
            </goals>
            <phase>pre-integration-test</phase>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <goals>
              <goal>stop</goal>
            </goals>
            <phase>post-integration-test</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>flow-maven-plugin</artifactId>
        <version>${project.version}</version>
        <!-- Configure the output folder so that spring-boot-maven-plugin gets the generated resources -->
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
              <goal>build-frontend</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
