<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.vaadin</groupId>
        <artifactId>flow-tests</artifactId>
        <version>25.0-SNAPSHOT</version>
    </parent>
    <artifactId>test-router-custom-context-encoded-production</artifactId>
    <name>Flow Router on custom context with encoded chars test (Production Mode)</name>
    <packaging>war</packaging>

    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>
        <jetty.skip>${maven.test.skip}</jetty.skip>
        <!--
            Uses both URL encodable chars (e.g. space => %20) and chars that should be escaped
            in a regex ($ { *) to verify that the Flow client correctly computes location
        -->
        <jettyContextPath>/custom con$t{ext*rou}ter</jettyContextPath>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-test-resources</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-dev-server</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- The Jetty plugin allows us to easily test the development
                build by running jetty:run -->
            <plugin>
                <groupId>org.eclipse.jetty.ee10</groupId>
                <artifactId>jetty-ee10-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <executions>
                    <!-- start and stop jetty (running our app) when running
                        integration tests -->
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webApp>
                        <contextPath>${jettyContextPath}</contextPath>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>flow-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>prepare-frontend</goal>
                            <goal>build-frontend</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <vaadin.test.jettyContextPath>${jettyContextPath}</vaadin.test.jettyContextPath>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
