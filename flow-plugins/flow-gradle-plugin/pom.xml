<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.vaadin</groupId>
        <artifactId>flow-plugins</artifactId>
        <version>10.0-SNAPSHOT</version>
    </parent>

    <artifactId>flow-gradle-plugin</artifactId>
    <name>Flow Gradle Plugin</name>
    <packaging>jar</packaging>

    <description>
        This maven module act as a proxy to test, build, and release the flow gradle plugin,
        which is written in Kotlin and is built by gradle natively. This makes development
        and testing of the gradle plugin much easier against the changes of flow, especially
        the flow-plugin-base. However, publishing the vaadin-gradle-plugin to gradle plugin
        central repo is done within platform final releases.
    </description>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-plugin-base</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- copy all dependencies to target/dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <useBaseVersion>true</useBaseVersion>
                            <addParentPoms>true</addParentPoms>
                            <copyPom>true</copyPom>
                            <useRepositoryLayout>true</useRepositoryLayout>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- run gradle tasks -->
            <plugin>
                <groupId>codes.rafael.gradlemavenplugin</groupId>
                <artifactId>gradle-maven-plugin</artifactId>
                <version>1.0.10</version>
                <configuration>
                    <gradleVersion>7.3</gradleVersion>
                    <tasks>
                        <task>clean</task>
                        <task>build</task>
                        <task>javadocJar</task>
                    </tasks>
                    <args>
                        <arg>-x</arg>
                        <arg>functionalTest</arg>
                        <arg>-S</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>invoke</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.gradle</groupId>
                        <artifactId>gradle-tooling-api</artifactId>
                        <version>7.3-20210825160000+0000</version>
                      </dependency>
                </dependencies>
            </plugin>
            <!-- copy generated JARs -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-gradle-jars</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>build/libs/</directory>
                                    <includes>
                                        <include>**/*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- attach copied JARs to build -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>target/${project.artifactId}-${project.version}-sources.jar</file>
                                    <type>jar</type>
                                    <classifier>sources</classifier>
                                </artifact>
                                <artifact>
                                    <file>target/${project.artifactId}-${project.version}-javadoc.jar</file>
                                    <type>jar</type>
                                    <classifier>javadoc</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
