ifdef::env-github[:outfilesuffix: .asciidoc]
= Using Attributes and Properties with a Polymer Web Component

This tutorial covers configuring a web component through attributes and properties and is a continuation of the <<tutorial-webcomponent-basic#,Basic Integration of a Polymer Web Component>> tutorial. For information about how to use events with Polymer components, see  <<tutorial-webcomponent-events#,Using Events with a Polymer Web Component>>.

Polymer elements and web components are mainly configured through attributes and/or properties. For the `<paper-slider>` element there is documentation available at https://elements.polymer-project.org/elements/paper-slider.

In this tutorial the focus is on providing an API for the numeric `value` property and the boolean `pin` property. The `value` property decides what value is indicated by the slider and should be between `min` (default 0) and `max` (default 100). The `pin` property decides whether a pin with a numeric label is shown when the slider thumb is pressed.

Based on the empty component class created in the <<tutorial-webcomponent-basic#,previous tutorial>>, the API for `value` and `pin` can look like the following:

[source,java]
----
@Tag("paper-slider")
@HtmlImport("bower_components/paper-slider/paper-slider.html")
public class PaperSlider extends Component {
  public PaperSlider() {
  }
  public void setValue(int value) {
    getElement().setProperty("value", value);
  }
  public int getValue() {
    return getElement().getProperty("value", 0);
  }
  public void setPinVisible(boolean pinVisible) {
      getElement().setProperty("pin", pinVisible);
  }
  public boolean isPinVisible() {
      return getElement().getProperty("pin", false);
  }
}
----

The setters forward the value to the corresponding property in the element and the getters return the property value or a default value if no value has been set. This uses the same property methods described in the <<tutorial-properties-attributes#,Element Properties and Attributes>> tutorial as there is no difference between configuring a property for a built in element and for a web component element.

For listening to events from a web component, see
** <<tutorial-webcomponent-events#,Using Events with a Polymer Web Component>>.
