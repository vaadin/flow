---
title: Overview
order: 1
layout: page
---

ifdef::env-github[:outfilesuffix: .asciidoc]
= Vaadin Flow

Vaadin Flow is a new Java web framework for building modern web apps and websites.
It is part of the Vaadin Platform and a successor for the Vaadin Framework bringing Web Component support to Java users.
Flow allows developers to be super productive by creating UIs in Java or
by using HTML Templates for composing the UI and binding it to any backend using Java.

The Power of Vaadin Flow comes from the following concepts:

* A set of beautiful UI components build with focus on end-user and developer experience
* Powerful abstraction layers for easily building your own reusable UI components with either Java or HTML templates
* Data Binding API for connecting the UI components to any backend using type safe Java
* Router API for easily creating hierarchical page structures for the user to navigate

This is the documentation for Flow. It is divided into the following subsections in recommended reading order :

== Introduction and Getting Started
** <<introduction/introduction-overview#,Introduction to Flow>>
** <<introduction/tutorial-hello-world#,Building a Hello World Application>>
** <<introduction/tutorial-get-started#,Getting Started>>

== Router and Navigation
Router is a core concept in Vaadin Flow, enabling Navigation for your website or web app.
It is based on HTML5 History API, and makes it possible to for the user to navigate pages back and forward,
and keep the page state intact. The following tutorials explain how to use the Router:

* <<routing/tutorial-routing-annotation#,Defining Routes with @Route>>
* <<routing/tutorial-routing-lifecycle#,Navigation Lifecycle>>
* <<routing/tutorial-router-layout#,Router Layouts and Nested Router Targets>>
* <<routing/tutorial-router-url-parameters#,URL Parameters for Navigation Targets>>
* <<routing/tutorial-routing-url-generation#,URL generation>>
* <<routing/tutorial-routing-navigation#,Navigating Between Routes>>
* <<routing/tutorial-routing-page-titles#,Updating Page Title on Navigation>>
* <<routing/tutorial-routing-exception-handling#,Router Exception Handling>>
* <<routing/tutorial-routing-get-registered-routes#,Getting Registered Routes>>

== Using Vaadin Components
* <<components/tutorial-component-basic-features#,Component Basic Features>>
* <<components/tutorial-flow-components-setup#,Using Vaadin Components in Flow>>
* <<components/tutorial-flow-grid#,Grid>>
* <<components/tutorial-flow-icon#,Using Icons>>

== Binding Components to Data
* <<binding-data/tutorial-flow-components-binder#,Binder overview>>
* <<binding-data/tutorial-flow-components-binder-validation#,Validating and Converting User Input>>
* <<binding-data/tutorial-flow-components-binder-load#,Loading from and Saving to Business Objects>>
* <<binding-data/tutorial-flow-components-binder-beans#,Binding Beans to Forms>>
* <<binding-data/tutorial-flow-data-provider#,Showing a list of data with Data Providers>>

== Importing HTML, JavaScript and CSS files
* <<importing-dependencies/tutorial-include-css#,Including Style Sheets>>
* <<importing-dependencies/tutorial-importing#,Importing html/javascript>>
* <<importing-dependencies/tutorial-ways-of-importing#,Ways of importing the dependencies>>

== Theming Flow Applications
* <<theme/tutorial-built-in-themes#,Component themes>>

== Creating Components
* <<creating-components/tutorial-component-basic#,Creating A Simple Component Using the Element API>>
* <<creating-components/tutorial-component-many-elements#,Creating a Component Based on Many Elements>>
* <<creating-components/tutorial-component-property-descriptor#,Using API Helpers for Defining Component Properties>>
* <<creating-components/tutorial-component-composite#,Creating a Component Using Existing Components>>
* <<creating-components/tutorial-component-events#,Using Events with Components>>
* <<creating-components/tutorial-component-container#,Creating a Component Which Can Contain Other Components>>
* <<creating-components/tutorial-component-lifecycle-callbacks#,Component Lifecycle Callbacks>>

== Manipulating the DOM with Element API
* <<element-api/tutorial-properties-attributes#,Element Properties and Attributes>>
* <<element-api/tutorial-event-listener#,Listening to User Events>>
* <<element-api/tutorial-user-input#,Retrieving User Input>>
* <<element-api/tutorial-dynamic-styling#,Dynamic styling>>
* <<element-api/tutorial-shadow-root#,Shadow root in server-side Element>>

== Integrating Web Components
* <<web-components/tutorial-webcomponent-basic#,Basic Integration of a Polymer Web Component>>
* <<web-components/tutorial-webcomponent-attributes-and-properties#,Using Attributes and Properties with a Polymer Web Component>>
* <<web-components/tutorial-webcomponent-events#,Using Events with a Polymer Web Component>>
* <<web-components/tutorial-webcomponents-es5#,Serving ES5 Web Components to older browsers with Polymer 2>>
* <<web-components/tutorial-flow-webjars#,Webjars in Flow>>
* <<web-components/tutorial-how-to-use-webjars#,How to use Webjars>>

== Polymer template
* <<polymer-templates/tutorial-template-basic#,Creating A Simple Component Using the Template API>>
* <<polymer-templates/tutorial-template-components#,Binding Components from PolymerTemplate>>
* <<polymer-templates/tutorial-template-subtemplate#,Using sub-template from PolymerTemplate>>
* <<polymer-templates/tutorial-template-components-in-slot#,Using <slot> in PolymerTemplates>>
* <<polymer-templates/tutorial-template-event-handlers#,Handling User Events in a PolymerTemplate>>
* <<polymer-templates/tutorial-template-bindings#,Binding Model Data in a PolymerTemplate>>
** <<polymer-templates/tutorial-template-bindings#two-way-binding,Two-way data binding>>
* <<polymer-templates/tutorial-template-list-bindings#,Using List of Items in a PolymerTemplate with template repeater>>
* <<polymer-templates/tutorial-template-model-bean#,Using Beans with a PolymerTemplate Model>>
* <<polymer-templates/tutorial-template-model-converters#,Using Model Converters with a PolymerTemplate Model>>

== Spring
* <<spring/tutorial-spring-basic#,Use Flow with Spring>>
* <<spring/tutorial-spring-routing#,Routing with Spring>>
* <<spring/tutorial-spring-scopes#,Vaadin Spring Scopes>>
* <<spring/tutorial-spring-configuration#,Vaadin Spring Configuration>>
* <<spring/tutorial-spring-examples#,Getting Started with Spring and Flow>>

== Advanced Topics
* <<advanced/tutorial-i18n-localization#,Application Localization (I18N)>>
* <<advanced/tutorial-bootstrap#,Modifying the bootstrap page>>
* <<advanced/tutorial-flow-runtime-configuration#,Flow runtime configuration>>
* <<advanced/tutorial-execute-javascript#,Executing JavaScript from Server Side>>
* <<advanced/tutorial-dependency-filter#,Modifying how dependencies are loaded with DependencyFilters>>
* <<advanced/tutorial-service-init-listener#,Configure RequestHandlers, BootstrapListeners and DependencyFilters using VaadinServiceInitListener>>
* <<advanced/tutorial-dynamic-content#,Showing Dynamic Content>>
* <<advanced/tutorial-loading-indicator#,Customizing the Loading Indicator>>
* <<advanced/tutorial-history-api#,History API>>
* <<advanced/tutorial-stream-resources#,Using stream resources>>
