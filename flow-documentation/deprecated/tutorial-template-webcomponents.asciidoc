ifdef::env-github[:outfilesuffix: .asciidoc]
= Using Web Components in a AngularTemplate

This tutorial covers how Web Components can be used in AngularTemplates. For a basic
tutorial on AngularTemplates, see <<tutorial-template-basic#,Creating A Simple Component Using the AngularTemplate API>>.
For a basic tutorial on Web Components, see <<tutorial-webcomponent-basic#,Basic Integration of a Polymer Web Component>>.

Web Components can be used inside AngularTemplates just as any other HTML elements,
but you need to declare the needed dependencies for the Web Component. Consider
the following template code which uses three different Web Components:

[source,html]
----
<div class="form">
  <paper-input label="Total"></paper-input>
  <vaadin-date-picker name label="Date"></vaadin-date-picker>
  <paper-textarea label="Comment"></paper-textarea>
</div>
----

For including the needed dependencies, you can use the `@Uses(Component.class)`
annotation in your AngularTemplate subclass to specify the Component class that declares
the actual dependencies needed. This way you can avoid repeating writing the path
for the component's dependencies using the `@HtmlImport` tag for every AngularTemplate which uses the Web
Component.

[source,java]
----
@Uses(PaperInput.class)
@Uses(PaperTextarea.class)
@Uses(VaadinDatePicker.class)
class Form extends AngularTemplate {
  // Implementation omitted
}

@Tag("paper-input")
@HtmlImport("bower_components/paper-input/paper-input.html")
class PaperInput extends HtmlComponent {
}

@Tag("paper-textarea")
@HtmlImport("bower_components/paper-textarea/paper-textarea.html")
class PaperTextarea extends HtmlComponent {
}

@Tag("vaadin-date-picker")
@HtmlImport("bower_components/vaadin-date-picker/vaadin-date-picker.html")
class VaadinDatePicker extends HtmlComponent {
}
----

[NOTE]
The `@Uses` annotation imports all dependencies defined with `@HtmlImport`,
`@StyleSheet` and `@JavaScript`.
[NOTE]
The `@Uses` annotations are transitive. Circular dependencies are supported, and
the framework won't load any dependency twice.
