{
  "name": "paper-input-container",
  "tag": "paper-input-container",
  "baseUrl": "paper-input/paper-input-container.html",
  "version": "2.0.1",
  "properties": [
    {
      "name": "noLabelFloat",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Set to true to disable the floating label. The label disappears when the input value is\nnot null.\n       "
    },
    {
      "name": "alwaysFloatLabel",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Set to true to always float the floating label.\n       "
    },
    {
      "name": "attrForValue",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The attribute to listen for value changes on.\n       "
    },
    {
      "name": "autoValidate",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Set to true to auto-validate the input value when it changes.\n       "
    },
    {
      "name": "invalid",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "True if the input is invalid. This property is set automatically when the input value\nchanges if auto-validating, or when the `iron-input-validate` event is heard from a child.\n       "
    },
    {
      "name": "focused",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "True if the input has focus.\n       ",
      "readOnly": true
    }
  ],
  "methods": [
    {
      "name": "updateAddons",
      "description": "Call this to update the state of add-ons.",
      "parameters": [
        {
          "name": "state",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Add-on state."
        }
      ],
      "returns": "UNDEFINED"
    }
  ],
  "events": [
    {
      "name": "focused-changed",
      "description": "Fired when the `focused` property changes.",
      "properties": []
    }
  ],
  "slots": [
    "prefix",
    "label",
    "input",
    "suffix",
    "add-on"
  ],
  "behaviors": [],
  "mixins": [],
  "description": "`<paper-input-container>` is a container for a `<label>`, an `<iron-input>` or\n`<textarea>` and optional add-on elements such as an error message or character\ncounter, used to implement Material Design text fields.\n\nFor example:\n\n    <paper-input-container>\n      <label slot=\"label\">Your name</label>\n      <iron-input slot=\"input\">\n        <input>\n      </iron-input>\n      // In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">` instead of the above.\n    </paper-input-container>\n\nYou can style the nested <input> however you want; if you want it to look like a\nMaterial Design input, you can style it with the --paper-input-container-shared-input-style mixin.\n\nDo not wrap `<paper-input-container>` around elements that already include it, such as `<paper-input>`.\nDoing so may cause events to bounce infinitely between the container and its contained element.\n\n### Listening for input changes\n\nBy default, it listens for changes on the `bind-value` attribute on its children nodes and perform\ntasks such as auto-validating and label styling when the `bind-value` changes. You can configure\nthe attribute it listens to with the `attr-for-value` attribute.\n\n### Using a custom input element\n\nYou can use a custom input element in a `<paper-input-container>`, for example to implement a\ncompound input field like a social security number input. The custom input element should have the\n`paper-input-input` class, have a `notify:true` value property and optionally implements\n`Polymer.IronValidatableBehavior` if it is validatable.\n\n    <paper-input-container attr-for-value=\"ssn-value\">\n      <label slot=\"label\">Social security number</label>\n      <ssn-input slot=\"input\" class=\"paper-input-input\"></ssn-input>\n    </paper-input-container>\n\n\nIf you're using a `<paper-input-container>` imperatively, it's important to make sure\nthat you attach its children (the `iron-input` and the optional `label`) before you\nattach the `<paper-input-container>` itself, so that it can be set up correctly.\n\n### Validation\n\nIf the `auto-validate` attribute is set, the input container will validate the input and update\nthe container styling when the input value changes.\n\n### Add-ons\n\nAdd-ons are child elements of a `<paper-input-container>` with the `add-on` attribute and\nimplements the `Polymer.PaperInputAddonBehavior` behavior. They are notified when the input value\nor validity changes, and may implement functionality such as error messages or character counters.\nThey appear at the bottom of the input.\n\n### Prefixes and suffixes\nThese are child elements of a `<paper-input-container>` with the `prefix`\nor `suffix` attribute, and are displayed inline with the input, before or after.\n\n    <paper-input-container>\n      <div slot=\"prefix\">$</div>\n      <label slot=\"label\">Total</label>\n      <iron-input slot=\"input\">\n        <input>\n      </iron-input>\n      // In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">` instead of the above.\n      <paper-icon-button slot=\"suffix\" icon=\"clear\"></paper-icon-button>\n    </paper-input-container>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-color` | Label and underline color when the input is not focused | `--secondary-text-color`\n`--paper-input-container-focus-color` | Label and underline color when the input is focused | `--primary-color`\n`--paper-input-container-invalid-color` | Label and underline color when the input is is invalid | `--error-color`\n`--paper-input-container-input-color` | Input foreground color | `--primary-text-color`\n`--paper-input-container` | Mixin applied to the container | `{}`\n`--paper-input-container-disabled` | Mixin applied to the container when it's disabled | `{}`\n`--paper-input-container-label` | Mixin applied to the label | `{}`\n`--paper-input-container-label-focus` | Mixin applied to the label when the input is focused | `{}`\n`--paper-input-container-label-floating` | Mixin applied to the label when floating | `{}`\n`--paper-input-container-input` | Mixin applied to the input | `{}`\n`--paper-input-container-input-focus` | Mixin applied to the input when focused | `{}`\n`--paper-input-container-input-invalid` | Mixin applied to the input when invalid | `{}`\n`--paper-input-container-input-webkit-spinner` | Mixin applied to the webkit spinner | `{}`\n`--paper-input-container-input-webkit-clear` | Mixin applied to the webkit clear button | `{}`\n`--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer clear button | `{}`\n`--paper-input-container-underline` | Mixin applied to the underline | `{}`\n`--paper-input-container-underline-focus` | Mixin applied to the underline when the input is focused | `{}`\n`--paper-input-container-underline-disabled` | Mixin applied to the underline when the input is disabled | `{}`\n`--paper-input-prefix` | Mixin applied to the input prefix | `{}`\n`--paper-input-suffix` | Mixin applied to the input suffix | `{}`\n\nThis element is `display:block` by default, but you can set the `inline` attribute to make it\n`display:inline-block`."
}
