{
  "name": "paper-tabs",
  "tag": "paper-tabs",
  "baseUrl": "paper-tabs/paper-tabs.html",
  "version": "2.0.0",
  "properties": [
    {
      "name": "attrForSelected",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "If you want to use an attribute value or property of an element for\n`selected` instead of the index, set this to the name of the attribute\nor property. Hyphenated values are converted to camel case when used to\nlook up the property of a selectable element. Camel cased values are\n*not* converted to hyphenated values for attribute lookup. It's\nrecommended that you provide the hyphenated form of the name so that\nselection works in both cases. (Use `attr-or-property-name` instead of\n`attrOrPropertyName`.)\n       "
    },
    {
      "name": "selected",
      "type": [
        "STRING",
        "NUMBER"
      ],
      "objectType": [],
      "description": "Gets or sets the selected element. The default is to use the index of the item."
    },
    {
      "name": "selectedItem",
      "type": [
        "OBJECT"
      ],
      "objectType": [],
      "description": "Returns the currently selected item.",
      "readOnly": true
    },
    {
      "name": "activateEvent",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.\n       "
    },
    {
      "name": "selectable",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": ""
    },
    {
      "name": "selectedClass",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The class to set on elements when selected.\n       "
    },
    {
      "name": "selectedAttribute",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The attribute to set on elements when selected.\n       "
    },
    {
      "name": "fallbackSelection",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "Default fallback if the selection based on selected with `attrForSelected`\nis not found.\n       "
    },
    {
      "name": "items",
      "type": [
        "ARRAY"
      ],
      "objectType": [],
      "description": "The list of items from which a selection can be made.\n       ",
      "readOnly": true
    },
    {
      "name": "multi",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, multiple selections are allowed.\n       "
    },
    {
      "name": "selectedValues",
      "type": [
        "ARRAY"
      ],
      "objectType": [],
      "description": "Gets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.\n       "
    },
    {
      "name": "selectedItems",
      "type": [
        "ARRAY"
      ],
      "objectType": [],
      "description": "Returns an array of currently selected items.\n       ",
      "readOnly": true
    },
    {
      "name": "keyEventTarget",
      "type": [
        "OBJECT"
      ],
      "objectType": [],
      "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners."
    },
    {
      "name": "stopKeyboardEventPropagation",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.\n         "
    },
    {
      "name": "keyBindings",
      "type": [
        "OBJECT"
      ],
      "objectType": [],
      "description": ""
    },
    {
      "name": "focusedItem",
      "type": [
        "OBJECT"
      ],
      "objectType": [],
      "description": "Returns the currently focused item.",
      "readOnly": true
    },
    {
      "name": "attrForItemTitle",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The attribute to use on menu items to look up the item title. Typing the first\nletter of an item when the menu is open focuses that item. If unset, `textContent`\nwill be used.\n       "
    },
    {
      "name": "disabled",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": ""
    },
    {
      "name": "noink",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, ink ripple effect is disabled. When this property is changed,\nall descendant `<paper-tab>` elements have their `noink` property\nchanged to the new value as well.\n         "
    },
    {
      "name": "noBar",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, the bottom bar to indicate the selected tab will not be shown.\n         "
    },
    {
      "name": "noSlide",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, the slide effect for the bottom bar is disabled.\n         "
    },
    {
      "name": "scrollable",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, tabs are scrollable and the tab width is based on the label width.\n         "
    },
    {
      "name": "fitContainer",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, tabs expand to fit their container. This currently only applies when\nscrollable is true.\n         "
    },
    {
      "name": "disableDrag",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, dragging on the tabs to scroll is disabled.\n         "
    },
    {
      "name": "hideScrollButtons",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, scroll buttons (left/right arrow) will be hidden for scrollable tabs.\n         "
    },
    {
      "name": "alignBottom",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, the tabs are aligned to bottom (the selection bar appears at the top).\n         "
    },
    {
      "name": "autoselect",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "If true, tabs are automatically selected when focused using the\nkeyboard.\n         "
    },
    {
      "name": "autoselectDelay",
      "type": [
        "NUMBER"
      ],
      "objectType": [],
      "description": "The delay (in milliseconds) between when the user stops interacting\nwith the tabs through the keyboard and when the focused item is\nautomatically selected (if `autoselect` is true).\n         "
    }
  ],
  "methods": [
    {
      "name": "notifyResize",
      "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.\n     ",
      "parameters": [],
      "returns": "UNDEFINED"
    },
    {
      "name": "assignParentResizable",
      "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.\n     ",
      "parameters": [
        {
          "name": "parentResizable",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "stopResizeNotificationsFor",
      "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.\n     ",
      "parameters": [
        {
          "name": "target",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "resizerShouldNotify",
      "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
      "parameters": [
        {
          "name": "element",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
        }
      ],
      "returns": "BOOLEAN"
    },
    {
      "name": "indexOf",
      "description": "Returns the index of the given item.",
      "parameters": [
        {
          "name": "item",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "OBJECT"
    },
    {
      "name": "select",
      "description": "Selects the given value. If the `multi` property is true, then the selected state of the\n`value` will be toggled; otherwise the `value` will be selected.",
      "parameters": [
        {
          "name": "value",
          "type": [
            "STRING",
            "NUMBER"
          ],
          "objectType": [],
          "description": "the value to select."
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "selectPrevious",
      "description": "Selects the previous item.",
      "parameters": [],
      "returns": "UNDEFINED"
    },
    {
      "name": "selectNext",
      "description": "Selects the next item.",
      "parameters": [],
      "returns": "UNDEFINED"
    },
    {
      "name": "selectIndex",
      "description": "Selects the item at the given index.",
      "parameters": [
        {
          "name": "index",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "forceSynchronousItemUpdate",
      "description": "Force a synchronous update of the `items` property.\n\nNOTE: Consider listening for the `iron-items-changed` event to respond to\nupdates to the set of selectable items after updates to the DOM list and\nselection state have been made.\n\nWARNING: If you are using this method, you should probably consider an\nalternate approach. Synchronously querying for items is potentially\nslow for many use cases. The `items` property will update asynchronously\non its own to reflect selectable items in the DOM.\n     ",
      "parameters": [],
      "returns": "UNDEFINED"
    },
    {
      "name": "multiChanged",
      "description": "",
      "parameters": [
        {
          "name": "multi",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "addOwnKeyBinding",
      "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
      "parameters": [
        {
          "name": "eventString",
          "type": [
            "STRING"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "handlerName",
          "type": [
            "STRING"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "removeOwnKeyBindings",
      "description": "When called, will remove all imperatively-added key bindings.\n       ",
      "parameters": [],
      "returns": "UNDEFINED"
    },
    {
      "name": "keyboardEventMatchesKeys",
      "description": "Returns true if a keyboard event matches `eventString`.",
      "parameters": [
        {
          "name": "event",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "eventString",
          "type": [
            "STRING"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "BOOLEAN"
    }
  ],
  "events": [
    {
      "name": "iron-activate",
      "description": "iron-activate",
      "properties": []
    },
    {
      "name": "iron-deselect",
      "description": "iron-deselect",
      "properties": []
    },
    {
      "name": "iron-items-changed",
      "description": "iron-items-changed",
      "properties": []
    },
    {
      "name": "iron-select",
      "description": "iron-select",
      "properties": []
    },
    {
      "name": "selected-changed",
      "description": "Fired when the `selected` property changes.",
      "properties": []
    },
    {
      "name": "selected-item-changed",
      "description": "Fired when the `selectedItem` property changes.",
      "properties": []
    },
    {
      "name": "items-changed",
      "description": "Fired when the `items` property changes.",
      "properties": []
    },
    {
      "name": "selected-values-changed",
      "description": "Fired when the `selectedValues` property changes.",
      "properties": []
    },
    {
      "name": "selected-items-changed",
      "description": "Fired when the `selectedItems` property changes.",
      "properties": []
    }
  ],
  "slots": [
    ""
  ],
  "behaviors": [
    "Polymer.IronResizableBehavior",
    "Polymer.IronMenubarBehavior",
    "Polymer.IronMenuBehavior",
    "Polymer.IronMultiSelectableBehavior",
    "Polymer.IronA11yKeysBehavior",
    "Polymer.IronSelectableBehavior"
  ],
  "mixins": [],
  "description": ""
}
