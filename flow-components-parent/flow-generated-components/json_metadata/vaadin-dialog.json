{
  "name": "Vaadin.DialogElement",
  "tag": "vaadin-dialog",
  "baseUrl": "vaadin-dialog/src/vaadin-dialog.html",
  "properties": [
    {
      "name": "theme",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "Theme to apply to the overlay element\n             "
    },
    {
      "name": "opened",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "True if the overlay is currently displayed.\n             ",
      "notify": true
    },
    {
      "name": "noCloseOnOutsideClick",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Set to true to disable closing dialog on outside click\n             "
    },
    {
      "name": "noCloseOnEsc",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Set to true to disable closing dialog on Escape press\n             "
    },
    {
      "name": "ariaLabel",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "Set the `aria-label` attribute for assistive technologies like\nscreen readers. An `undefined` value for this property (the\ndefault) means that the `aria-label` attribute is not present at\nall.\n             "
    },
    {
      "name": "renderer",
      "type": [
        "FUNCTION"
      ],
      "objectType": [],
      "description": "Custom function for rendering the content of the dialog.\nReceives two arguments:\n\n- `root` The root container DOM element. Append your content to it.\n- `dialog` The reference to the `<vaadin-dialog>` element.\n             "
    }
  ],
  "methods": [
    {
      "name": "render",
      "description": "Manually invoke existing renderer.\n         ",
      "parameters": [],
      "returns": "UNDEFINED"
    },
    {
      "name": "disconnectedCallback",
      "description": "",
      "parameters": [],
      "returns": "UNDEFINED"
    }
  ],
  "events": [
    {
      "name": "opened-changed",
      "description": "Fired when the `opened` property changes.",
      "properties": []
    }
  ],
  "slots": [],
  "behaviors": [],
  "mixins": [
    "Vaadin.ElementMixin",
    "Vaadin.ThemePropertyMixin"
  ],
  "variants": {},
  "description": "`<vaadin-dialog>` is a Web Component for creating customized modal dialogs. The content of the\ndialog can be populated in two ways: imperatively by using renderer callback function and\ndeclaratively by using Polymer's Templates.\n\n### Rendering\n\nBy default, the dialog uses the content provided by using the renderer callback function.\n\nThe renderer function provides `root`, `dialog` arguments.\nGenerate DOM content, append it to the `root` element and control the state\nof the host element by accessing `dialog`. Before generating new content,\nusers are able to check if there is already content in `root` for reusing it.\n\n```html\n<vaadin-dialog id=\"dialog\"></vaadin-dialog>\n```\n```js\nconst dialog = document.querySelector('#dialog');\ndialog.renderer = function(root, dialog) {\n  root.textContent = \"Sample dialog\";\n};\n```\n\nRenderer is called on the opening of the dialog.\nDOM generated during the renderer call can be reused\nin the next renderer call and will be provided with the `root` argument.\nOn first call it will be empty.\n\n### Polymer Templates\n\nAlternatively, the content can be provided with Polymer's Template.\nDialog finds the first child template and uses that in case renderer callback function\nis not provided. You can also set a custom template using the `template` property.\n\n```html\n<vaadin-dialog opened>\n  <template>\n    Sample dialog\n  </template>\n</vaadin-dialog>\n```\n\n### Styling\n\nSee [`<vaadin-overlay>` documentation](https://github.com/vaadin/vaadin-overlay/blob/master/src/vaadin-overlay.html)\nfor `<vaadin-dialog-overlay>` parts.\n\nNote: the `theme` attribute value set on `<vaadin-dialog>` is\npropagated to the internal `<vaadin-dialog-overlay>` component.\n\nSee [ThemableMixin â€“ how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)"
}
