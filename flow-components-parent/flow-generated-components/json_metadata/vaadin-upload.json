{
  "name": "vaadin-upload",
  "tag": "vaadin-upload",
  "baseUrl": "vaadin-upload/vaadin-upload.html",
  "version": "2.1.2",
  "properties": [
    {
      "name": "nodrop",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Define whether the element supports dropping files on it for uploading.\nBy default it's enabled in desktop and disabled in touch devices\nbecause mobile devices do not support drag events in general. Setting\nit false means that drop is enabled even in touch-devices, and true\ndisables drop in all devices."
    },
    {
      "name": "target",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The server URL. The default value is an empty string, which means that\n_window.location_ will be used.\n       "
    },
    {
      "name": "method",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "HTTP Method used to send the files. Only POST and PUT are allowed.\n       "
    },
    {
      "name": "headers",
      "type": [
        "OBJECT"
      ],
      "objectType": [],
      "description": "Key-Value map to send to the server. If you set this property as an\nattribute, use a valid JSON string, for example:\n```\n<vaadin-upload headers='{\"X-Foo\": \"Bar\"}'></vaadin-upload>\n```\n       "
    },
    {
      "name": "timeout",
      "type": [
        "NUMBER"
      ],
      "objectType": [],
      "description": "Max time in milliseconds for the entire upload process, if exceeded the\nrequest will be aborted. Zero means that there is no timeout.\n\n       "
    },
    {
      "name": "files",
      "type": [
        "ARRAY"
      ],
      "objectType": [],
      "description": "The array of files being processed, or already uploaded.\n\nEach element is a [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File)\nobject with a number of extra properties  to track the upload process:\n- `uploadTarget`: The target URL used to upload this file.\n- `elapsed`: Elapsed time since the upload started.\n- `elapsedStr`: Human-readable elapsed time.\n- `remaining`: Number of seconds remaining for the upload to finish.\n- `remainingStr`: Human-readable remaining time for the upload to finish.\n- `progress`: Percentage of the file already uploaded.\n- `speed`: Upload speed in kB/s.\n- `size`: File size in bytes.\n- `totalStr`: Human-readable total size of the file.\n- `loaded`: Bytes transferred so far.\n- `loadedStr`: Human-readable uploaded size at the moment.\n- `status`: Status of the upload process.\n- `error`: Error message in case the upload failed.\n- `abort`: True if the file was canceled by the user.\n- `complete`: True when the file was transferred to the server.\n- `uploading`: True while trasferring data to the server.\n       "
    },
    {
      "name": "maxFiles",
      "type": [
        "NUMBER"
      ],
      "objectType": [],
      "description": "Limit of files to upload, by default it is unlimited. If the value is\nset to one, native file browser will prevent selecting multiple files.\n       "
    },
    {
      "name": "maxFilesReached",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Specifies if the maximum number of files have been uploaded\n       ",
      "readOnly": true
    },
    {
      "name": "accept",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "Specifies the types of files that the server accepts.\nSyntax: a comma-separated list of MIME type patterns (wildcards are\nallowed) or file extensions.\nNotice that MIME types are widely supported, while file extensions\nare only implemented in certain browsers, so avoid using it.\nExample: accept=\"video/*,image/tiff\" or accept=\".pdf,audio/mp3\"\n       "
    },
    {
      "name": "maxFileSize",
      "type": [
        "NUMBER"
      ],
      "objectType": [],
      "description": "Specifies the maximum file size in bytes allowed to upload.\nNotice that it is a client-side constraint, which will be checked before\nsending the request. Obviously you need to do the same validation in\nthe server-side and be sure that they are aligned.\n       "
    },
    {
      "name": "formDataName",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "Specifies the 'name' property at Content-Disposition\n       "
    },
    {
      "name": "noAuto",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "Prevents upload(s) from immediately uploading upon adding file(s).\nWhen set, you must manually trigger uploads using the `uploadFiles` method\n       "
    },
    {
      "name": "i18n",
      "type": [
        "OBJECT"
      ],
      "objectType": [],
      "description": "The object used to localize this component.\nFor changing the default localization, change the entire\n_i18n_ object or just the property you want to modify.\n\nThe object has the following JSON structure and default values:\n\n    {\n      dropFiles: {\n       one: 'Drop file here...',\n       many: 'Drop files here...'\n      },\n      addFiles: {\n       one: 'Select File',\n       many: 'Upload Files'\n      },\n      cancel: 'Cancel',\n      error: {\n       tooManyFiles: 'Too Many Files.',\n       fileIsTooBig: 'File is Too Big.',\n       incorrectFileType: 'Incorrect File Type.'\n      },\n      uploading: {\n       status: {\n         connecting: 'Connecting...',\n         stalled: 'Stalled.',\n         processing: 'Processing File...',\n         held: 'Queued'\n       },\n       remainingTime: {\n         prefix: 'remaining time: ',\n         unknown: 'unknown remaining time'\n       },\n       error: {\n         serverUnavailable: 'Server Unavailable',\n         unexpectedServerError: 'Unexpected Server Error',\n         forbidden: 'Forbidden'\n       }\n      },\n      units: {\n       size: ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      },\n      formatSize: function(bytes) {\n       // returns the size followed by the best suitable unit\n      },\n      formatTime: function(seconds, [secs, mins, hours]) {\n       // returns a 'HH:MM:SS' string\n      }\n    }"
    }
  ],
  "methods": [
    {
      "name": "uploadFiles",
      "description": "Triggers the upload of any files that are not completed",
      "parameters": [
        {
          "name": "files",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    }
  ],
  "events": [
    {
      "name": "file-reject",
      "description": "file-reject",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file added"
        },
        {
          "name": "detail.error",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the cause"
        }
      ]
    },
    {
      "name": "upload-abort",
      "description": "upload-abort",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded"
        }
      ]
    },
    {
      "name": "upload-before",
      "description": "upload-before",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded"
        },
        {
          "name": "detail.file.uploadTarget",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the upload request URL, initialized with the value of vaadin-upload `target` property"
        }
      ]
    },
    {
      "name": "upload-error",
      "description": "upload-error",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded"
        }
      ]
    },
    {
      "name": "upload-progress",
      "description": "upload-progress",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded with loaded info"
        }
      ]
    },
    {
      "name": "upload-request",
      "description": "upload-request",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded"
        },
        {
          "name": "detail.formData",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the FormData object"
        }
      ]
    },
    {
      "name": "upload-response",
      "description": "upload-response",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded"
        }
      ]
    },
    {
      "name": "upload-retry",
      "description": "upload-retry",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the previous upload xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded"
        }
      ]
    },
    {
      "name": "upload-start",
      "description": "upload-start",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded"
        }
      ]
    },
    {
      "name": "upload-success",
      "description": "upload-success",
      "properties": [
        {
          "name": "detail",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        },
        {
          "name": "detail.xhr",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the xhr"
        },
        {
          "name": "detail.file",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "the file being uploaded with loaded info"
        }
      ]
    },
    {
      "name": "files-changed",
      "description": "Fired when the `files` property changes.",
      "properties": []
    },
    {
      "name": "max-files-reached-changed",
      "description": "Fired when the `maxFilesReached` property changes.",
      "properties": []
    }
  ],
  "slots": [
    "add-button",
    "drop-label-icon",
    "drop-label",
    "file-list",
    ""
  ],
  "behaviors": [],
  "mixins": [],
  "description": "`<vaadin-upload>` is a Polymer element for uploading multiple files with drag and drop support.\n\nExample:\n\n```html\n<vaadin-upload></vaadin-upload>\n```\n\n### Styling\n\nThe following custom properties are available for styling the component.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--vaadin-upload-drag-ripple`|A mixin that is applied to the ripple animation in the drop area|`{}`\n`--vaadin-upload-drop-label`|A mixin that is applied to the drop label|`{}`\n`--vaadin-upload-drop-label-dragover`|A mixin that is applied to the drop label when overing the component with files|`{}`\n`--vaadin-upload-drop-label-icon`|A mixin that is applied to the drop icon|`{}`\n`--vaadin-upload-file-list`|A mixin that is applied to the file list|`{}`\n`--vaadin-upload-buttons`|A mixin that is applied to the buttons container|`{}`\n`--vaadin-upload-buttons-primary`|A mixin that is applied to the primary buttons container (left side)|`{}`\n`--vaadin-upload-buttons-secondary`|A mixin that is applied to the secondary buttons container (right side)|`{}`\n`--vaadin-upload-button-add-wrapper`|A mixin that is applied to the div wrapping the upload button|`{}`\n`--vaadin-upload-button-add`|A mixin that is applied to the upload button|`{}`\n`--vaadin-upload-button-add-disabled`|A mixin that is applied to the upload button when `maxFiles` limit is reached|`{}`"
}
