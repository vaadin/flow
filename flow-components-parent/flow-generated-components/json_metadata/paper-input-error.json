{
  "name": "paper-input-error",
  "tag": "paper-input-error",
  "baseUrl": "paper-input/paper-input-error.html",
  "version": "2.0.1",
  "properties": [
    {
      "name": "invalid",
      "type": [
        "BOOLEAN"
      ],
      "objectType": [],
      "description": "True if the error is showing.\n       ",
      "readOnly": true
    }
  ],
  "methods": [
    {
      "name": "update",
      "description": "This overrides the update function in PaperInputAddonBehavior.",
      "parameters": [
        {
          "name": "state",
          "type": [],
          "objectType": [
            {
              "name": "inputElement",
              "type": [
                "OBJECT"
              ],
              "optional": true
            },
            {
              "name": "value",
              "type": [
                "STRING"
              ],
              "optional": true
            },
            {
              "name": "invalid",
              "type": [
                "BOOLEAN"
              ]
            }
          ],
          "description": "    inputElement: The input element.\n    value: The input value.\n    invalid: True if the input value is invalid.",
          "optional": true
        }
      ],
      "returns": "UNDEFINED"
    }
  ],
  "events": [],
  "slots": [
    ""
  ],
  "behaviors": [
    "Polymer.PaperInputAddonBehavior"
  ],
  "mixins": [],
  "description": "`<paper-input-error>` is an error message for use with `<paper-input-container>`. The error is\ndisplayed when the `<paper-input-container>` is `invalid`.\n\n    <paper-input-container>\n      <input pattern=\"[0-9]*\">\n      <paper-input-error slot=\"add-on\">Only numbers are allowed!</paper-input-error>\n    </paper-input-container>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | The foreground color of the error | `--error-color`\n`--paper-input-error`                   | Mixin applied to the error        | `{}`"
}
