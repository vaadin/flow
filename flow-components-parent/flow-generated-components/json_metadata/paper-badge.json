{
  "name": "paper-badge",
  "tag": "paper-badge",
  "baseUrl": "paper-badge/paper-badge.html",
  "version": "2.0.0",
  "properties": [
    {
      "name": "for",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The id of the element that the badge is anchored to. This element\nmust be a sibling of the badge.\n         "
    },
    {
      "name": "label",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "The label displayed in the badge. The label is centered, and ideally\nshould have very few characters.\n         "
    },
    {
      "name": "icon",
      "type": [
        "STRING"
      ],
      "objectType": [],
      "description": "An iron-icon ID. When given, the badge content will use an\n`<iron-icon>` element displaying the given icon ID rather than the\nlabel text. However, the label text will still be used for\naccessibility purposes.\n         "
    },
    {
      "name": "target",
      "type": [
        "OBJECT"
      ],
      "objectType": [],
      "description": "Returns the target element that this badge is anchored to. It is\neither the element given by the `for` attribute, or the immediate parent\nof the badge.\n       "
    }
  ],
  "methods": [
    {
      "name": "notifyResize",
      "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.\n     ",
      "parameters": [],
      "returns": "UNDEFINED"
    },
    {
      "name": "assignParentResizable",
      "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.\n     ",
      "parameters": [
        {
          "name": "parentResizable",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "stopResizeNotificationsFor",
      "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.\n     ",
      "parameters": [
        {
          "name": "target",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "Missing documentation!"
        }
      ],
      "returns": "UNDEFINED"
    },
    {
      "name": "resizerShouldNotify",
      "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
      "parameters": [
        {
          "name": "element",
          "type": [
            "OBJECT"
          ],
          "objectType": [],
          "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
        }
      ],
      "returns": "BOOLEAN"
    },
    {
      "name": "updatePosition",
      "description": "Repositions the badge relative to its anchor element. This is called\nautomatically when the badge is attached or an `iron-resize` event is\nfired (for exmaple if the window has resized, or your target is a\ncustom element that implements IronResizableBehavior).\n\nYou should call this in all other cases when the achor's position\nmight have changed (for example, if it's visibility has changed, or\nyou've manually done a page re-layout).\n       ",
      "parameters": [],
      "returns": "UNDEFINED"
    }
  ],
  "events": [],
  "slots": [],
  "behaviors": [
    "Polymer.IronResizableBehavior"
  ],
  "mixins": [],
  "description": ""
}
