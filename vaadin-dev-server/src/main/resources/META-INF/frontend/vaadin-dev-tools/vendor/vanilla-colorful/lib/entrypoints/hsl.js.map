{"version":3,"file":"hsl.js","sourceRoot":"","sources":["../../src/lib/entrypoints/hsl.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAExD,MAAM,UAAU,GAAyB;IACvC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAClC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACtD,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/C,KAAK,EAAE,iBAAiB;IACxB,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;CACvC,CAAC;AAgBF,MAAM,OAAO,OAAQ,SAAQ,WAAqB;IAChD,IAAc,UAAU;QACtB,OAAO,UAAU,CAAC;IACpB,CAAC;CACF","sourcesContent":["import type { ColorModel, ColorPickerEventListener, ColorPickerEventMap, HslColor } from '../types';\nimport { ColorPicker } from '../components/color-picker.js';\nimport { hslaToHsva, hsvaToHsla, hslaToHsl } from '../utils/convert.js';\nimport { equalColorObjects } from '../utils/compare.js';\n\nconst colorModel: ColorModel<HslColor> = {\n  defaultColor: { h: 0, s: 0, l: 0 },\n  toHsva: ({ h, s, l }) => hslaToHsva({ h, s, l, a: 1 }),\n  fromHsva: (hsva) => hslaToHsl(hsvaToHsla(hsva)),\n  equal: equalColorObjects,\n  fromAttr: (color) => JSON.parse(color)\n};\n\nexport interface HslBase {\n  addEventListener<T extends keyof ColorPickerEventMap<HslColor>>(\n    type: T,\n    listener: ColorPickerEventListener<ColorPickerEventMap<HslColor>[T]>,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n\n  removeEventListener<T extends keyof ColorPickerEventMap<HslColor>>(\n    type: T,\n    listener: ColorPickerEventListener<ColorPickerEventMap<HslColor>[T]>,\n    options?: boolean | EventListenerOptions\n  ): void;\n}\n\nexport class HslBase extends ColorPicker<HslColor> {\n  protected get colorModel(): ColorModel<HslColor> {\n    return colorModel;\n  }\n}\n"]}